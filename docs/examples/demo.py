#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ò–ò –ø—Ä–æ–µ–∫—Ç–∞ –∏–∑—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏
"""

import os
import sys
from pathlib import Path

def main():
    print("üèõÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ò–ò –ø—Ä–æ–µ–∫—Ç –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏!")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
    try:
        from src.models.history_ai import HistoryAIModel
        print("‚úÖ –ò–ò –º–æ–¥–µ–ª—å –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ:")
        print("venv\\Scripts\\activate")
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é
    while True:
        print("\nüéØ –ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?")
        print("1. ü§ñ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Ç–µ–∫—Å—Ç–∞")
        print("2. üìä –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö")
        print("3. üåê –û—Ç–∫—Ä—ã—Ç—å Jupyter Notebook")
        print("4. üìÅ –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞")
        print("5. ‚ùå –í—ã—Ö–æ–¥")
        
        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-5): ").strip()
        
        if choice == "1":
            test_generation()
            
        elif choice == "2":
            show_sample_data()
            
        elif choice == "3":
            print("\nüåê –û—Ç–∫—Ä—ã–≤–∞–µ–º Jupyter Notebook...")
            print("–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä:")
            print("http://localhost:8888/tree?token=a8927eac24643dc899a351f3ccda4923c7511f5d08ba7847")
            print("\n–ò–ª–∏ –æ—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª:")
            print("notebooks/getting_started.ipynb")
            
        elif choice == "4":
            show_project_structure()
            
        elif choice == "5":
            print("\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
            
        else:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")

def test_generation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Ç–µ–∫—Å—Ç–∞"""
    print("\nü§ñ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤...")
    print("=" * 50)
    
    try:
        # –°–æ–∑–¥–∞–µ–º –º–æ–¥–µ–ª—å
        ai_model = HistoryAIModel(model_name="distilgpt2")
        ai_model.load_model("generation")
        
        # –ü—Ä–∏–º–µ—Ä—ã –ø—Ä–æ–º–ø—Ç–æ–≤
        prompts = [
            "–í 1812 –≥–æ–¥—É –ø—Ä–æ–∏–∑–æ—à–ª–æ –≤–∞–∂–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ:",
            "–ü–µ—Ç—Ä I –∏–∑–≤–µ—Å—Ç–µ–Ω —Ç–µ–º, —á—Ç–æ",
            "–í –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏ –≤–∞–∂–Ω—É—é —Ä–æ–ª—å —Å—ã–≥—Ä–∞–ª",
            "–†–µ–≤–æ–ª—é—Ü–∏—è 1917 –≥–æ–¥–∞ –ø—Ä–∏–≤–µ–ª–∞ –∫"
        ]
        
        for i, prompt in enumerate(prompts, 1):
            print(f"\n{i}. –ü—Ä–æ–º–ø—Ç: {prompt}")
            try:
                result = ai_model.generate_text(prompt, max_length=80, temperature=0.7)
                print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        
        # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
        print("\nüéÆ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º:")
        print("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –ø—Ä–æ–º–ø—Ç (–∏–ª–∏ '–≤—ã—Ö–æ–¥' –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è):")
        
        while True:
            user_prompt = input("\n–í–∞—à –ø—Ä–æ–º–ø—Ç: ").strip()
            if user_prompt.lower() in ['–≤—ã—Ö–æ–¥', 'exit', 'quit']:
                break
            
            if user_prompt:
                try:
                    result = ai_model.generate_text(user_prompt, max_length=100, temperature=0.7)
                    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")

def show_sample_data():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏–º–µ—Ä—ã –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüìä –ü—Ä–∏–º–µ—Ä—ã –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö:")
    print("=" * 50)
    
    sample_data = [
        {
            "text": "–í 1812 –≥–æ–¥—É –ù–∞–ø–æ–ª–µ–æ–Ω –ë–æ–Ω–∞–ø–∞—Ä—Ç –≤—Ç–æ—Ä–≥—Å—è –≤ –†–æ—Å—Å–∏—é —Å –∞—Ä–º–∏–µ–π –≤ 600 —Ç—ã—Å—è—á —á–µ–ª–æ–≤–µ–∫. –≠—Ç–æ —Å–æ–±—ã—Ç–∏–µ —Å—Ç–∞–ª–æ –Ω–∞—á–∞–ª–æ–º –û—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –≤–æ–π–Ω—ã 1812 –≥–æ–¥–∞.",
            "period": "XIX –≤–µ–∫",
            "category": "–≤–æ–π–Ω–∞"
        },
        {
            "text": "–ü–µ—Ç—Ä I –í–µ–ª–∏–∫–∏–π –ø—Ä–æ–≤–µ–ª –º–∞—Å—à—Ç–∞–±–Ω—ã–µ —Ä–µ—Ñ–æ—Ä–º—ã –≤ –†–æ—Å—Å–∏–∏, –≤–∫–ª—é—á–∞—è —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–π –∞—Ä–º–∏–∏ –∏ —Ñ–ª–æ—Ç–∞, –∞ —Ç–∞–∫–∂–µ –æ—Å–Ω–æ–≤–∞–Ω–∏–µ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–∞ –≤ 1703 –≥–æ–¥—É.",
            "period": "XVIII –≤–µ–∫", 
            "category": "—Ä–µ—Ñ–æ—Ä–º—ã"
        },
        {
            "text": "–í 988 –≥–æ–¥—É –∫–Ω—è–∑—å –í–ª–∞–¥–∏–º–∏—Ä –∫—Ä–µ—Å—Ç–∏–ª –†—É—Å—å, –ø—Ä–∏–Ω—è–≤ —Ö—Ä–∏—Å—Ç–∏–∞–Ω—Å—Ç–≤–æ –∏–∑ –í–∏–∑–∞–Ω—Ç–∏–∏. –≠—Ç–æ —Å–æ–±—ã—Ç–∏–µ –æ–∫–∞–∑–∞–ª–æ –æ–≥—Ä–æ–º–Ω–æ–µ –≤–ª–∏—è–Ω–∏–µ –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ —Ä—É—Å—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä—ã.",
            "period": "X –≤–µ–∫",
            "category": "—Ä–µ–ª–∏–≥–∏—è"
        }
    ]
    
    for i, item in enumerate(sample_data, 1):
        print(f"\n{i}. {item['period']} - {item['category']}")
        print(f"   {item['text']}")
    
    print(f"\nüìÅ –í—Å–µ–≥–æ –ø—Ä–∏–º–µ—Ä–æ–≤: {len(sample_data)}")
    print("üí° –í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª data/raw/sample_history_data.json")

def show_project_structure():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞"""
    print("\nüìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞:")
    print("=" * 50)
    
    structure = {
        "src/": "–ò—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥",
        "‚îú‚îÄ‚îÄ models/": "–ú–æ–¥–µ–ª–∏ –ò–ò",
        "‚îÇ   ‚îî‚îÄ‚îÄ history_ai.py": "–û—Å–Ω–æ–≤–Ω–∞—è –º–æ–¥–µ–ª—å",
        "‚îî‚îÄ‚îÄ train_model.py": "–°–∫—Ä–∏–ø—Ç –æ–±—É—á–µ–Ω–∏—è",
        "notebooks/": "Jupyter notebooks",
        "‚îú‚îÄ‚îÄ getting_started.ipynb": "–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π tutorial",
        "data/": "–î–∞–Ω–Ω—ã–µ",
        "‚îú‚îÄ‚îÄ raw/": "–ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ",
        "‚îî‚îÄ‚îÄ processed/": "–û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ",
        "models/": "–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏",
        "logs/": "–õ–æ–≥–∏ –æ–±—É—á–µ–Ω–∏—è",
        "requirements.txt": "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏",
        "setup_ai.py": "–°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏",
        "demo.py": "–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç"
    }
    
    for path, description in structure.items():
        print(f"{path:<25} - {description}")
    
    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"–í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: {count_files()}")
    print(f"–†–∞–∑–º–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞: {get_project_size()}")

def count_files():
    """–ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–µ"""
    count = 0
    for root, dirs, files in os.walk("."):
        count += len(files)
    return count

def get_project_size():
    """–ü–æ–ª—É—á–∞–µ—Ç —Ä–∞–∑–º–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞"""
    total_size = 0
    for root, dirs, files in os.walk("."):
        for file in files:
            try:
                total_size += os.path.getsize(os.path.join(root, file))
            except:
                pass
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ MB
    size_mb = total_size / (1024 * 1024)
    return f"{size_mb:.1f} MB"

if __name__ == "__main__":
    main()

