#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç —Å–±–æ—Ä–∫–∏ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ exe —Ñ–∞–π–ª–∞ –¥–ª—è –ò–ò-–ò—Å—Ç–æ—Ä–∏—è
–°–æ–∑–¥–∞–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π exe —Ñ–∞–π–ª, –∫–æ—Ç–æ—Ä—ã–π –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ –≤–Ω–µ—à–Ω–∏–º —Ñ–∞–π–ª–∞–º –ø—Ä–æ–µ–∫—Ç–∞
"""

import os
import sys
import subprocess
import shutil
from pathlib import Path

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–±–æ—Ä–∫–∏"""
    print("üèõÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–û–ì–û Windows exe —Ñ–∞–π–ª–∞")
    print("=" * 60)
    print("üéØ –¶–µ–ª—å: —Å–æ–∑–¥–∞—Ç—å exe —Ä–∞–∑–º–µ—Ä–æ–º ~15-25 –ú–ë")
    print("üîó –û–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ –≤–Ω–µ—à–Ω–∏–º —Ñ–∞–π–ª–∞–º –ø—Ä–æ–µ–∫—Ç–∞")
    print("‚ú® –í–∫–ª—é—á–∞–µ—Ç –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏: –ø—Ä–æ–º–ø—Ç—ã, —Ñ–∞–π–ª—ã, –ø–µ—Ä–µ–æ–±—É—á–µ–Ω–∏–µ")
    print()
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏
    exe_name = "AI-History"
    entry_point = "interfaces/windows/windows_interface_universal.py"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ—á–∫–∏ –≤—Ö–æ–¥–∞
    if not os.path.exists(entry_point):
        print(f"‚ùå –û—à–∏–±–∫–∞: —Ñ–∞–π–ª {entry_point} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    print(f"üìù –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞: {entry_point}")
    print(f"üì¶ –ò–º—è exe —Ñ–∞–π–ª–∞: {exe_name}.exe")
    print()
    
    # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è exe
    create_project_structure()
    
    # –°–æ–±–∏—Ä–∞–µ–º exe —Ñ–∞–π–ª
    if build_exe(exe_name, entry_point):
        print("‚úÖ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π exe —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        print(f"üìÅ –§–∞–π–ª: {exe_name}.exe")
        print(f"üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: README_Universal_EXE.md")
        print()
        print("üìä –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:")
        print("   ‚Ä¢ –†–∞–∑–º–µ—Ä: ~15-25 –ú–ë")
        print("   ‚Ä¢ –§—É–Ω–∫—Ü–∏–∏: –≤—Å–µ (–ø—Ä–æ–º–ø—Ç—ã, —Ñ–∞–π–ª—ã, –ø–µ—Ä–µ–æ–±—É—á–µ–Ω–∏–µ)")
        print("   ‚Ä¢ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: –≤–Ω–µ—à–Ω–∏–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞")
        print("   ‚Ä¢ –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å: Windows 10/11")
        print()
        print("üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç exe –¥–ª—è –ø–æ–ª–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –ò–ò!")
        return True
    else:
        print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è exe —Ñ–∞–π–ª–∞!")
        return False

def create_project_structure():
    """–°–æ–∑–¥–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –≤–Ω–µ—à–Ω–µ–π –≤–µ—Ä—Å–∏–∏"""
    print("üìÅ –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞...")
    
    directories = [
        'data/raw',
        'data/processed', 
        'models',
        'logs',
        'configs'
    ]
    
    for directory in directories:
        os.makedirs(directory, exist_ok=True)
        print(f"   ‚úÖ {directory}")
    
    print("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞")
    print()

def build_exe(exe_name, entry_point):
    """–°–æ–±–∏—Ä–∞–µ—Ç exe —Ñ–∞–π–ª"""
    print("üî® –°–æ–±–∏—Ä–∞–µ–º –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–ô exe —Ñ–∞–π–ª...")
    print("üîó –û–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ –≤–Ω–µ—à–Ω–∏–º —Ñ–∞–π–ª–∞–º –ø—Ä–æ–µ–∫—Ç–∞")
    print("‚ú® –í–∫–ª—é—á–∞–µ—Ç –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏")
    print()
    
    try:
        # –ö–æ–º–∞–Ω–¥–∞ PyInstaller —á–µ—Ä–µ–∑ Python –∏–∑ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏
        if hasattr(sys, 'real_prefix') or (hasattr(sys, 'base_prefix') and sys.base_prefix != sys.prefix):
            # –ú—ã –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏
            python_exe = sys.executable
        else:
            # –ò—â–µ–º Python –≤ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏
            venv_python = os.path.join('venv', 'Scripts', 'python.exe')
            if os.path.exists(venv_python):
                python_exe = venv_python
            else:
                python_exe = sys.executable  # Fallback –∫ —Å–∏—Å—Ç–µ–º–Ω–æ–º—É Python
        
        pyinstaller_cmd = [
            python_exe, '-m', 'PyInstaller',
            '--onefile',                    # –û–¥–∏–Ω exe —Ñ–∞–π–ª
            '--windowed',                   # –ë–µ–∑ –∫–æ–Ω—Å–æ–ª–∏
            '--name', exe_name,             # –ò–º—è —Ñ–∞–π–ª–∞
            '--distpath', 'dist',           # –ü–∞–ø–∫–∞ –≤—ã–≤–æ–¥–∞
            '--workpath', 'build',          # –í—Ä–µ–º–µ–Ω–Ω–∞—è –ø–∞–ø–∫–∞
            '--specpath', '.',              # –ü–∞–ø–∫–∞ –¥–ª—è .spec —Ñ–∞–π–ª–∞
            '--clean',                      # –û—á–∏—Å—Ç–∫–∞ –ø–µ—Ä–µ–¥ —Å–±–æ—Ä–∫–æ–π
            
            # –°–∫—Ä—ã—Ç—ã–µ –∏–º–ø–æ—Ä—Ç—ã (—Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–ª—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞)
            '--hidden-import', 'tkinter',
            '--hidden-import', 'tkinter.ttk',
            '--hidden-import', 'tkinter.messagebox',
            '--hidden-import', 'tkinter.filedialog',
            '--hidden-import', 'tkinter.scrolledtext',
            '--hidden-import', 'threading',
            '--hidden-import', 'subprocess',
            '--hidden-import', 'pathlib',
            '--hidden-import', 'logging',
            '--hidden-import', 'json',
            '--hidden-import', 'shutil',
            
            # –ù–ï –≤–∫–ª—é—á–∞–µ–º ML –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ - –æ–Ω–∏ –±—É–¥—É—Ç –≤–Ω–µ—à–Ω–∏–º–∏
            # '--hidden-import', 'transformers',  # –ò—Å–∫–ª—é—á–µ–Ω–æ
            # '--hidden-import', 'torch',         # –ò—Å–∫–ª—é—á–µ–Ω–æ
            # '--hidden-import', 'tensorflow',    # –ò—Å–∫–ª—é—á–µ–Ω–æ
            # '--hidden-import', 'numpy',         # –ò—Å–∫–ª—é—á–µ–Ω–æ
            # '--hidden-import', 'pandas',        # –ò—Å–∫–ª—é—á–µ–Ω–æ
            # '--hidden-import', 'sklearn',       # –ò—Å–∫–ª—é—á–µ–Ω–æ
            # '--hidden-import', 'matplotlib',    # –ò—Å–∫–ª—é—á–µ–Ω–æ
            # '--hidden-import', 'seaborn',       # –ò—Å–∫–ª—é—á–µ–Ω–æ
            # '--hidden-import', 'requests',      # –ò—Å–∫–ª—é—á–µ–Ω–æ
            # '--hidden-import', 'beautifulsoup4', # –ò—Å–∫–ª—é—á–µ–Ω–æ
            # '--hidden-import', 'lxml',          # –ò—Å–∫–ª—é—á–µ–Ω–æ
            # '--hidden-import', 'tqdm',          # –ò—Å–∫–ª—é—á–µ–Ω–æ
            # '--hidden-import', 'jupyter',       # –ò—Å–∫–ª—é—á–µ–Ω–æ
            # '--hidden-import', 'ipykernel',     # –ò—Å–∫–ª—é—á–µ–Ω–æ
            
            entry_point
        ]
        
        print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º PyInstaller...")
        print(f"üêç –ò—Å–ø–æ–ª—å–∑—É–µ–º Python: {python_exe}")
        print(f"üìù –ö–æ–º–∞–Ω–¥–∞: {' '.join(pyinstaller_cmd)}")
        print()
        
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É
        result = subprocess.run(pyinstaller_cmd, capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ PyInstaller –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            
            # –ü–µ—Ä–µ–º–µ—â–∞–µ–º exe —Ñ–∞–π–ª –≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞
            exe_path = f"dist/{exe_name}.exe"
            target_path = f"{exe_name}.exe"
            
            if os.path.exists(exe_path):
                # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
                if os.path.exists(target_path):
                    try:
                        os.remove(target_path)
                        print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª: {target_path}")
                    except PermissionError:
                        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª (–≤–æ–∑–º–æ–∂–Ω–æ, –∑–∞–ø—É—â–µ–Ω): {target_path}")
                        print(f"üìÅ Exe —Ñ–∞–π–ª –¥–æ—Å—Ç—É–ø–µ–Ω –≤: {exe_path}")
                        return True
                
                # –ü–µ—Ä–µ–º–µ—â–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª
                try:
                    shutil.move(exe_path, target_path)
                    print(f"‚úÖ Exe —Ñ–∞–π–ª –ø–µ—Ä–µ–º–µ—â–µ–Ω –≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞")
                except PermissionError:
                    print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å —Ñ–∞–π–ª (–≤–æ–∑–º–æ–∂–Ω–æ, –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω)")
                    print(f"üìÅ Exe —Ñ–∞–π–ª –¥–æ—Å—Ç—É–ø–µ–Ω –≤: {exe_path}")
                    return True
                
                # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
                file_size = os.path.getsize(f"{exe_name}.exe")
                size_mb = file_size / (1024 * 1024)
                print(f"üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {size_mb:.1f} –ú–ë")
                
                # –°–æ–∑–¥–∞–µ–º README
                create_readme(exe_name)
                
                # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
                cleanup_build_files(exe_name)
                
                return True
            else:
                print(f"‚ùå Exe —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {exe_path}")
                return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ PyInstaller:")
            print(f"STDOUT: {result.stdout}")
            print(f"STDERR: {result.stderr}")
            return False
            
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏: {e}")
        return False

def create_readme(exe_name):
    """–°–æ–∑–¥–∞–µ—Ç README –¥–ª—è exe —Ñ–∞–π–ª–∞"""
    readme_content = f"""# {exe_name}.exe - –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ò–ò-–ò—Å—Ç–æ—Ä–∏—è

## üéØ –û–ø–∏—Å–∞–Ω–∏–µ
–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ò–ò –º–æ–¥–µ–ª—è–º–∏ –∏—Å—Ç–æ—Ä–∏–∏. –í–∫–ª—é—á–∞–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –æ–¥–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.

## ‚ú® –§—É–Ω–∫—Ü–∏–∏
- ü§ñ **–†–∞–±–æ—Ç–∞ —Å –ò–ò**: –≤–≤–æ–¥ –ø—Ä–æ–º–ø—Ç–æ–≤ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–æ–≤
- üìÅ **–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞–º–∏**: –∑–∞–≥—Ä—É–∑–∫–∞ –∏ –ø—Ä–æ—Å–º–æ—Ç—Ä —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö
- üéì **–ü–µ—Ä–µ–æ–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π**: —É–ª—É—á—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ –æ—Ç–≤–µ—Ç–æ–≤
- üîÑ **–í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏**: –∞–Ω–≥–ª–∏–π—Å–∫–∞—è –∏–ª–∏ —Ä—É—Å—Å–∫–∞—è –º–æ–¥–µ–ª—å
- üìä **–ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä**: –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–µ—Ä–µ–æ–±—É—á–µ–Ω–∏—è

## üöÄ –ó–∞–ø—É—Å–∫
1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ –ø–∞–ø–∫–µ —Å exe —Ñ–∞–π–ª–æ–º –µ—Å—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞:
   ```
   {exe_name}.exe
   ‚îú‚îÄ‚îÄ src/
   ‚îÇ   ‚îú‚îÄ‚îÄ train_model.py
   ‚îÇ   ‚îú‚îÄ‚îÄ generate_text.py
   ‚îÇ   ‚îî‚îÄ‚îÄ data_processing.py
   ‚îú‚îÄ‚îÄ scripts/
   ‚îÇ   ‚îî‚îÄ‚îÄ training/
   ‚îÇ       ‚îî‚îÄ‚îÄ train_model_ru.py
   ‚îú‚îÄ‚îÄ data/
   ‚îÇ   ‚îî‚îÄ‚îÄ raw/          # –°—é–¥–∞ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è —Ñ–∞–π–ª—ã
   ‚îú‚îÄ‚îÄ models/           # –ó–¥–µ—Å—å —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –æ–±—É—á–µ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏
   ‚îî‚îÄ‚îÄ logs/             # –õ–æ–≥–∏ —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
   ```

2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ `{exe_name}.exe`

## üìã –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ

### –†–∞–±–æ—Ç–∞ —Å –ò–ò
1. –í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å (–∞–Ω–≥–ª–∏–π—Å–∫–∞—è/—Ä—É—Å—Å–∫–∞—è)
2. –í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–ø—Ç –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞
3. –ù–∞–∂–º–∏—Ç–µ "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç"
4. –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ—è–≤–∏—Ç—Å—è –≤ –ø–æ–ª–µ –≤—ã–≤–æ–¥–∞

### –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞–º–∏
1. –ù–∞–∂–º–∏—Ç–µ "–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª" –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ "–û–±–Ω–æ–≤–∏—Ç—å" –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞
3. "–û—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É" - –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –ø–∞–ø–∫—É —Å –¥–∞–Ω–Ω—ã–º–∏
4. –î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –ø–æ —Ñ–∞–π–ª—É - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ

### –ü–µ—Ä–µ–æ–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π
1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö –≤ –ø–∞–ø–∫—É data/raw
2. –ù–∞–∂–º–∏—Ç–µ "–ü–µ—Ä–µ–æ–±—É—á–∏—Ç—å –º–æ–¥–µ–ª–∏"
3. –í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –¥–ª—è –ø–µ—Ä–µ–æ–±—É—á–µ–Ω–∏—è
4. –î–æ–∂–¥–∏—Ç–µ—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞

## ‚ö†Ô∏è –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è
- Windows 10/11
- Python —Å–∫—Ä–∏–ø—Ç—ã –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø–∞–ø–∫–µ src/
- –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏

## üîß –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ–ø–æ–ª–∞–¥–æ–∫
- –ï—Å–ª–∏ exe –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ Python —Å–∫—Ä–∏–ø—Ç–æ–≤
- –ü—Ä–∏ –æ—à–∏–±–∫–∞—Ö –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ –æ–±—É—á–µ–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
- –õ–æ–≥–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –ø–∞–ø–∫–µ logs/

## üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞
–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:
1. –ù–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
2. –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Python
3. –õ–æ–≥–∏ –≤ –ø–∞–ø–∫–µ logs/
"""

    with open(f"README_{exe_name}_EXE.md", 'w', encoding='utf-8') as f:
        f.write(readme_content)
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω README: README_{exe_name}_EXE.md")

def cleanup_build_files(exe_name):
    """–£–¥–∞–ª—è–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —Å–±–æ—Ä–∫–∏"""
    print("üßπ –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã...")
    
    files_to_remove = [
        f'{exe_name}.spec',
        'build',
        'dist'
    ]
    
    for item in files_to_remove:
        if os.path.exists(item):
            if os.path.isdir(item):
                shutil.rmtree(item)
                print(f"   üóëÔ∏è –£–¥–∞–ª–µ–Ω–∞ –ø–∞–ø–∫–∞: {item}")
            else:
                os.remove(item)
                print(f"   üóëÔ∏è –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: {item}")
    
    print("‚úÖ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –æ—á–∏—â–µ–Ω—ã")

if __name__ == "__main__":
    success = main()
    if success:
        print("\nüéâ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π exe —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        print("üí° –¢–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å –æ–¥–∏–Ω —Ñ–∞–π–ª —Å–æ –≤—Å–µ–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏!")
    else:
        print("\n‚ùå –°–æ–∑–¥–∞–Ω–∏–µ exe —Ñ–∞–π–ª–∞ –Ω–µ —É–¥–∞–ª–æ—Å—å!")
        sys.exit(1)
