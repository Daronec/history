#!/usr/bin/env python3
"""
–û–±—É—á–µ–Ω–∏–µ —Ä—É—Å—Å–∫–æ–π –ò–ò –º–æ–¥–µ–ª–∏ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏
"""

import sys
import os
sys.path.append('src')

from models.history_ai_ru import HistoryAIModelRU
from train_model import load_historical_data

def train_russian_model():
    """–û–±—É—á–∞–µ—Ç —Ä—É—Å—Å–∫—É—é –º–æ–¥–µ–ª—å –Ω–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö"""
    print("üá∑üá∫ –û–±—É—á–µ–Ω–∏–µ —Ä—É—Å—Å–∫–æ–π –ò–ò –º–æ–¥–µ–ª–∏ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏")
    print("=" * 60)
    
    try:
        # –°–æ–∑–¥–∞–µ–º —Ä—É—Å—Å–∫—É—é –º–æ–¥–µ–ª—å
        ai_model = HistoryAIModelRU()
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        print("üìä –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ...")
        data = load_historical_data('data/raw')
        
        # –û–±—É—á–∞–µ–º –º–æ–¥–µ–ª—å
        print("ü§ñ –ù–∞—á–∏–Ω–∞–µ–º –æ–±—É—á–µ–Ω–∏–µ —Ä—É—Å—Å–∫–æ–π –º–æ–¥–µ–ª–∏...")
        ai_model.train(
            data_path='data/raw',
            task='generation',
            epochs=1,
            learning_rate=5e-5,
            batch_size=2
        )
        
        print("‚úÖ –û–±—É—á–µ–Ω–∏–µ —Ä—É—Å—Å–∫–æ–π –º–æ–¥–µ–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        print("\nüß™ –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ:")
        ai_model.load_trained_model('./models/history_ai_ru_trained')
        
        test_prompts = [
            "–í 1812 –≥–æ–¥—É –ø—Ä–æ–∏–∑–æ—à–ª–æ",
            "–ü–µ—Ç—Ä I –∏–∑–≤–µ—Å—Ç–µ–Ω —Ç–µ–º, —á—Ç–æ",
            "–°—Ç–∞–ª–∏–Ω —Ä–æ–¥–∏–ª—Å—è –≤"
        ]
        
        for prompt in test_prompts:
            result = ai_model.generate_text(prompt, max_length=50, temperature=0.7)
            print(f"–ü—Ä–æ–º–ø—Ç: {prompt}")
            print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
            print()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—É—á–µ–Ω–∏–∏ —Ä—É—Å—Å–∫–æ–π –º–æ–¥–µ–ª–∏: {e}")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ data/raw/sample_history_data.json")

if __name__ == "__main__":
    train_russian_model()
