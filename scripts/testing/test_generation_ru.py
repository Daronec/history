#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
"""

import sys
import os
sys.path.append('src')

from models.history_ai_ru import HistoryAIModelRU

def test_russian_generation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ"""
    print("üá∑üá∫ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ...")
    print("=" * 60)
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä—É—Å—Å–∫—É—é –º–æ–¥–µ–ª—å
        ai_model = HistoryAIModelRU()
        ai_model.load_model('generation')
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –ø—Ä–æ–º–ø—Ç—ã –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
        prompts = [
            "–í 1812 –≥–æ–¥—É –ø—Ä–æ–∏–∑–æ—à–ª–æ –≤–∞–∂–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ:",
            "–ü–µ—Ç—Ä I –∏–∑–≤–µ—Å—Ç–µ–Ω —Ç–µ–º, —á—Ç–æ",
            "–í –∏—Å—Ç–æ—Ä–∏–∏ –†–æ—Å—Å–∏–∏ –≤–∞–∂–Ω—É—é —Ä–æ–ª—å —Å—ã–≥—Ä–∞–ª",
            "–†–µ–≤–æ–ª—é—Ü–∏—è 1917 –≥–æ–¥–∞ –ø—Ä–∏–≤–µ–ª–∞ –∫",
            "–†–µ—Ñ–æ—Ä–º—ã –ü–µ—Ç—Ä–∞ I –≤–∫–ª—é—á–∞–ª–∏",
            "–í XVIII –≤–µ–∫–µ –≤ –†–æ—Å—Å–∏–∏",
            "–°—Ç–∞–ª–∏–Ω —Ä–æ–¥–∏–ª—Å—è –≤",
            "–í–µ–ª–∏–∫–∞—è –û—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –≤–æ–π–Ω–∞ –Ω–∞—á–∞–ª–∞—Å—å",
            "–ö—Ä–µ—â–µ–Ω–∏–µ –†—É—Å–∏ –ø—Ä–æ–∏–∑–æ—à–ª–æ –≤",
            "–ò–≤–∞–Ω –ì—Ä–æ–∑–Ω—ã–π –ø—Ä–∞–≤–∏–ª"
        ]
        
        for i, prompt in enumerate(prompts, 1):
            print(f"\n{i}. –ü—Ä–æ–º–ø—Ç: {prompt}")
            try:
                result = ai_model.generate_text(prompt, max_length=80, temperature=0.7)
                print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
        
        # –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º
        print("\nüéÆ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º:")
        print("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –ø—Ä–æ–º–ø—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ (–∏–ª–∏ '–≤—ã—Ö–æ–¥' –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è):")
        
        while True:
            try:
                user_prompt = input("\n–í–∞—à –ø—Ä–æ–º–ø—Ç: ").strip()
                if user_prompt.lower() in ['–≤—ã—Ö–æ–¥', 'exit', 'quit']:
                    break
                
                if user_prompt:
                    result = ai_model.generate_text(user_prompt, max_length=100, temperature=0.7)
                    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
            except KeyboardInterrupt:
                print("\n\nüëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
                break
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–∞—á–∞–ª–∞ –æ–±—É—á–∏—Ç—å —Ä—É—Å—Å–∫—É—é –º–æ–¥–µ–ª—å:")
        print("   python train_model_ru.py")

if __name__ == "__main__":
    test_russian_generation()
