#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö PDF —Ñ–∞–π–ª–æ–≤
"""

import os
import sys
from pathlib import Path
import logging

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(str(Path(__file__).parent))

from data_processing import load_file

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def diagnose_pdf_file(file_path: Path):
    """
    –î–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä—É–µ—Ç PDF —Ñ–∞–π–ª –∏ –ø—ã—Ç–∞–µ—Ç—Å—è –∏–∑–≤–ª–µ—á—å —Ç–µ–∫—Å—Ç —Ä–∞–∑–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏
    
    Args:
        file_path: –ü—É—Ç—å –∫ PDF —Ñ–∞–π–ª—É
    """
    print(f"\nüîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ñ–∞–π–ª–∞: {file_path.name}")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
    file_size = file_path.stat().st_size
    print(f"üìè –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size:,} –±–∞–π—Ç ({file_size/1024/1024:.2f} MB)")
    
    # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª
    try:
        text = load_file(file_path)
        if text:
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á–µ–Ω —Ç–µ–∫—Å—Ç: {len(text):,} —Å–∏–º–≤–æ–ª–æ–≤")
            print(f"üìù –ü–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤: {text[:200]}...")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å —Ç–µ–∫—Å—Ç")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ: {e}")
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å PyPDF2
    try:
        import PyPDF2
        with open(file_path, 'rb') as file:
            pdf_reader = PyPDF2.PdfReader(file)
            print(f"üìÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü (PyPDF2): {len(pdf_reader.pages)}")
            
            # –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å —Ç–µ–∫—Å—Ç —Å –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            if len(pdf_reader.pages) > 0:
                first_page = pdf_reader.pages[0]
                first_page_text = first_page.extract_text()
                print(f"üìù –¢–µ–∫—Å—Ç –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã (PyPDF2): {len(first_page_text):,} —Å–∏–º–≤–æ–ª–æ–≤")
                if first_page_text:
                    print(f"üìù –ü–µ—Ä–≤—ã–µ 100 —Å–∏–º–≤–æ–ª–æ–≤: {first_page_text[:100]}...")
                else:
                    print("‚ùå PyPDF2 –Ω–µ —Å–º–æ–≥ –∏–∑–≤–ª–µ—á—å —Ç–µ–∫—Å—Ç")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ PyPDF2: {e}")
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å pdfplumber
    try:
        import pdfplumber
        with pdfplumber.open(file_path) as pdf:
            print(f"üìÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞–Ω–∏—Ü (pdfplumber): {len(pdf.pages)}")
            
            # –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å —Ç–µ–∫—Å—Ç —Å –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            if len(pdf.pages) > 0:
                first_page = pdf.pages[0]
                first_page_text = first_page.extract_text()
                print(f"üìù –¢–µ–∫—Å—Ç –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã (pdfplumber): {len(first_page_text):,} —Å–∏–º–≤–æ–ª–æ–≤")
                if first_page_text:
                    print(f"üìù –ü–µ—Ä–≤—ã–µ 100 —Å–∏–º–≤–æ–ª–æ–≤: {first_page_text[:100]}...")
                else:
                    print("‚ùå pdfplumber –Ω–µ —Å–º–æ–≥ –∏–∑–≤–ª–µ—á—å —Ç–µ–∫—Å—Ç")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ pdfplumber: {e}")

def main():
    test_data_dir = Path("test_data")
    
    if not test_data_dir.exists():
        print("‚ùå –ü–∞–ø–∫–∞ test_data –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –≤—Å–µ—Ö PDF —Ñ–∞–π–ª–æ–≤ –≤ test_data")
    print("=" * 60)
    
    pdf_files = list(test_data_dir.glob("*.pdf"))
    print(f"üìÅ –ù–∞–π–¥–µ–Ω–æ PDF —Ñ–∞–π–ª–æ–≤: {len(pdf_files)}")
    
    for pdf_file in pdf_files:
        diagnose_pdf_file(pdf_file)
    
    print("\n‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

if __name__ == "__main__":
    main()
